"""Update email field to user id in reset password table

Revision ID: 52d95a78795d
Revises: db434cb77fa7
Create Date: 2024-07-14 15:03:33.371648

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '52d95a78795d'
down_revision: Union[str, None] = 'db434cb77fa7'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('password_resets', sa.Column('user_id', sa.Integer(), nullable=True))
    op.execute('UPDATE password_resets pr SET user_id = u.user_id FROM users u WHERE pr.email = u.email')
    op.drop_constraint('password_resets_email_fkey', 'password_resets', type_='foreignkey')
    op.create_foreign_key(None, 'password_resets', 'users', ['user_id'], ['user_id'])
    op.drop_column('password_resets', 'email')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('password_resets', sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.execute('UPDATE password_resets pr SET email = u.email FROM users u WHERE pr.user_id = u.user_id')
    op.drop_constraint(None, 'password_resets', type_='foreignkey')
    op.create_foreign_key('password_resets_email_fkey', 'password_resets', 'users', ['email'], ['email'])
    op.drop_column('password_resets', 'user_id')
    # ### end Alembic commands ###
